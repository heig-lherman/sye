From 369f040e1ec72e2ffafa571680d96bcf5d7e2a4b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lo=C3=AFc=20Herman?= <loic@loicherman.ch>
Date: Tue, 19 Dec 2023 15:20:57 +0100
Subject: [PATCH] feat: impl lab13

---
 usr/host/memreplace.c | 90 +++++++++++++++++++++++++++++++++++++------
 1 file changed, 79 insertions(+), 11 deletions(-)

diff --git a/usr/host/memreplace.c b/usr/host/memreplace.c
index d869121..ec0ae55 100644
--- a/usr/host/memreplace.c
+++ b/usr/host/memreplace.c
@@ -26,18 +26,76 @@
 /* [0] = Valid on 1 bit */
 uint8_t page_table[NB_PAGES] = {0};
 
+uint8_t tvc = 0;
+uint8_t tdu[NB_PAGES] = {0};
 
 void replaceLRU(void) {
-    // TO COMPLETE
+	int replace_index = -1;
+
+	for (size_t i = 0; i < NB_PAGES; ++i) {
+		if (!(page_table[i] & VALID_BIT_MASK)) {
+            continue;
+        }
+
+		if (replace_index == -1 || tdu[i] < tdu[replace_index]) {
+            replace_index = i;
+        }
+	}
+
+    if (replace_index == -1) {
+        fprintf(stderr, "Error: no page to replace found\n");
+        exit(1);
+    }
+
+	page_table[replace_index] &= ~VALID_BIT_MASK;
+	page_table[replace_index] |= SWAP_BIT_MASK;
 }
 
+void incCompteur(int page_no) {
+	if (page_no >= 0 && page_no < NB_PAGES) {
+        tdu[page_no] = ++tvc;
+    }
+}
 
 void replaceWSC(void) {
-    // TO COMPLETE
+    int replace_index = -1;
+    for (size_t i = 0; i < NB_PAGES; ++i) {
+        if (!(page_table[i] & VALID_BIT_MASK)) {
+            continue;
+        }
+
+        // Store the index of the first page
+        if (replace_index == -1) {
+            replace_index = i;
+        }
+
+        // If the page is not referenced
+        if (page_table[i] & REF_BIT_MASK) {
+			page_table[i] &= ~REF_BIT_MASK;
+            continue;
+		} 
+        
+        if (tvc - tdu[i] > DELTA) {
+			replace_index = i;
+			break;
+		}
+    }
+
+    if (replace_index == -1) {
+        fprintf(stderr, "Error: no page to replace found\n");
+        exit(1);
+    }
+
+    page_table[replace_index] &= ~VALID_BIT_MASK;
+    page_table[replace_index] |= SWAP_BIT_MASK;
 }
 
 void updateTDU(void) {
-    // TO COMPLETE
+    for (size_t i = 0; i < NB_PAGES; ++i) {
+        if (page_table[i] & REF_BIT_MASK & VALID_BIT_MASK) {
+            tdu[i] = tvc;
+        }
+    }
 }
 
 void init_page_table(void) {
@@ -121,17 +179,27 @@ int main(int argc, char *argv[]) {
             if (page_no >= 0 && page_no < NB_PAGES) {
                 if (LRU_run) {
                     /* LRU Related */
-                    if (!(page_table[page_no] & VALID_BIT_MASK)) /* VALID = 0 ? */
-                        replaceLRU();
-                    
-                    // TO COMPLETE
-                }
+                    if (!(page_table[page_no] & VALID_BIT_MASK)) {
+						replaceLRU();
+						page_table[page_no] &= ~SWAP_BIT_MASK;
+						page_table[page_no] |= VALID_BIT_MASK;
+					}
+
+                    incCompteur(page_no);
+                } 
                 else {
                     /* WSC Related */
-                    if (!(page_table[page_no] & VALID_BIT_MASK)) /* VALID = 0 ? */
+                    if (!(page_table[page_no] & VALID_BIT_MASK)) {
+                        /* VALID = 0 ? */
                         replaceWSC();
-
-                    // TO COMPLETE
+                        page_table[page_no] &= ~SWAP_BIT_MASK;
+                    }
+                    
+                    page_table[page_no] |= REF_BIT_MASK;
+                    page_table[page_no] |= VALID_BIT_MASK;
+                    
+                    tvc++;
+                    updateTDU();
                 }
 
                 print_memory();
-- 
2.43.0

